import React, { useState, useEffect } from 'react';
import './Quiz.scss';

const questions = [
  {
    word: 'Coffee',
    transcription: '[Ààk…îf…™]',
    correctIndex: 0,
    options: ['–ö–æ—Ñ–µ', '–°–æ–ª—å', '–ß–∞–π', '–°–∞—Ö–∞—Ä'],
  },
  {
    word: 'Apple',
    transcription: '[Àà√¶pl]',
    correctIndex: 2,
    options: ['–ì—Ä—É—à–∞', '–ú–æ–ª–æ–∫–æ', '–Ø–±–ª–æ–∫–æ', '–ú–∞—Å–ª–æ'],
  },
  {
    word: 'Milk',
    transcription: '[m…™lk]',
    correctIndex: 1,
    options: ['–°—ã—Ä', '–ú–æ–ª–æ–∫–æ', '–Ø–±–ª–æ–∫–æ', '–ß–∞–π'],
  },
  {
    word: 'Sugar',
    transcription: '[Àà É ä…°…ôr]',
    correctIndex: 3,
    options: ['–ú—É–∫–∞', '–°–æ–ª—å', '–°—ã—Ä', '–°–∞—Ö–∞—Ä'],
  },
];

const Quiz = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [selected, setSelected] = useState(null);
  const [isChecked, setIsChecked] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);
  const [streak, setStreak] = useState(0);

  const current = questions[currentIndex];
  const { word, transcription, options, correctIndex } = current;

  const speak = () => {
    const utterance = new SpeechSynthesisUtterance(word);
    utterance.lang = 'en-US';
    speechSynthesis.speak(utterance);
  };

  useEffect(() => {
    speak();
  }, [currentIndex]);

  useEffect(() => {
    if (streak === 4) {
      alert('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! 4 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥—Ä—è–¥!');
      setStreak(0);
    }
  }, [streak]);

  const handleCheck = () => {
    if (selected === null) return;
    const correct = selected === correctIndex;
    setIsCorrect(correct);
    setIsChecked(true);
    setStreak(correct ? streak + 1 : 0);
  };

  const handleNext = () => {
    const nextIndex = currentIndex + 1;
    if (nextIndex >= questions.length) {
      alert('–í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!');
      setCurrentIndex(0);
      setStreak(0);
    } else {
      setCurrentIndex(nextIndex);
    }

    setSelected(null);
    setIsChecked(false);
    setIsCorrect(false);
  };

  return (
    <div className="quiz-container">
      <div className="quiz-header">
        <span>–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–ö</span>
        <div className="streak-info">
          <span className="progress">{streak} –ü–†–ê–í–ò–õ–¨–ù–´–• –û–¢–í–ï–¢–ê –ü–û–î–†–Ø–î!</span>
          <div className="streak-bar">
            <div className="bar-fill" style={{ width: `${(streak / 4) * 100}%` }}></div>
          </div>
        </div>
      </div>

      <div className="quiz-body">
        <div className={`quiz-card ${isChecked ? (isCorrect ? 'correct' : 'wrong') : ''}`}>
          <p className="instruction">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–≤–æ</p>
          <h2 className="word">
            {word}
            <span className="sound-icon" onClick={speak}>üîä</span>
          </h2>
          <p className="transcription">{transcription}</p>

          <div className="options">
            {options.map((opt, i) => (
              <button
                key={i}
                className={`option 
                  ${selected === i ? 'selected' : ''} 
                  ${isChecked && i === correctIndex ? 'right' : ''} 
                  ${isChecked && selected === i && selected !== correctIndex ? 'wrong' : ''}`}
                onClick={() => !isChecked && setSelected(i)}
              >
                {opt}
                <span className="number">{i + 1}</span>
              </button>
            ))}
          </div>
        </div>
      </div>

      <div className="actions container">
        {!isChecked ? (
          <>
            <button className="skip" onClick={handleNext}>–ü–†–û–ü–£–°–¢–ò–¢–¨</button>
            <button className="check" onClick={handleCheck} disabled={selected === null}>–ü–†–û–í–ï–†–ò–¢–¨</button>
          </>
        ) : isCorrect ? (
          <>
            <div className="result success">
              <div className="icon">‚úÖ</div>
              <span>–°–£–ü–ï–†!</span>
            </div>
            <button className="next" onClick={handleNext}>–î–ê–õ–ï–ï</button>
          </>
        ) : (
          <>
            <div className="result error">
              <div className="icon">‚ùå</div>
              <span>–û–®–ò–ë–ö–ê!</span>
            </div>
            <button className="next" onClick={handleNext}>–î–ê–õ–ï–ï</button>
          </>
        )}
      </div>
    </div>
  );
};

export default Quiz;
